# soda2.conf
######################################
# Common non-soda2-specific services #
######################################

db-addr = "localhost"
common-zk = ["localhost:2181"]
common-es = "http://localhost:9200"

data-coordinator-instance = omega

common-database {
  host = ${db-addr}
  port = 5432
  username = "blist"
  password = "blist"
  c3p0 {
    maxPoolSize = 20
    idleConnectionTestPeriod = 60
    testConnectionOnCheckin = true
    preferredTestQuery = "SELECT 1"
    maxIdleTimeExcessConnections = 300
  }
}

common-log4j {
  rootLogger = [ INFO, console ]
  appender {
    console.class = org.apache.log4j.ConsoleAppender
    console.props {
      layout.class = org.apache.log4j.PatternLayout
      layout.props {
        ConversionPattern = "[%t] %p %c{1} %d %m%n"
      }
    }
  }
}

#################
# Soda fountain #
#################

com.socrata.soda-fountain = {
  database: ${common-database} {
    database = "sodafountain"
    app-name = "soda fountain"
  }
  network.port=8081
  curator.ensemble = ${common-zk}
  data-coordinator-client.instance = ${data-coordinator-instance}
  log4j = ${common-log4j} {
    logger.com.socrata.http.client = TRACE
  }
  etag-obfuscation-key = "quidquid id est timeo danaos et dona ferentis"
}

####################
# Data coordinator #
####################

com.socrata.coordinator.common = {
  database = ${common-database} {
    app-name = "data coordinator"
    database = "datacoordinator"
  }

  instance = ${data-coordinator-instance}

  secondary.configs {
    dummy-secondary {
      wants-working-copies = false
    }
    es {
      url = ${common-es}
      index-capacity = 1000
    }
  }

  log4j = ${common-log4j} {
    logger.com.socrata = TRACE
  }
}

com.socrata.coordinator.service = ${com.socrata.coordinator.common} {
  database.app-name = "data coordinator"
  curator.ensemble = ${common-zk}
  network.port = 6001
  allow-ddl-on-published-copies = true
  reports.directory = ${user.home}
}

com.socrata.coordinator.secondary-watcher = ${com.socrata.coordinator.common} {
   database.app-name = "data coordinator secondary watcher"
}

com.socrata.coordinator.backup.transmitter = ${com.socrata.coordinator.common} {
  network.backup-host = "localhost"
  database.app-name = "data coordinator transmitter"
}

com.socrata.coordinator.backup.receiver = ${com.socrata.coordinator.common} {
  database {
    database = "datacooordinator2"
    app-name = "data coordinator receiver"
  }
}

com.socrata.coordinator.utils = ${com.socrata.coordinator.common.database} {
  app-name = "utils"
  c3p0 = null
}

#####################
# Query coordinator #
#####################

com.socrata.query-coordinator {
  curator.ensemble = ${common-zk}
  network.port = 6002
  log4j = ${common-log4j} {
    logger.com.socrata = TRACE
  }
}

########################
# ES secondary backend #
########################

com.socrata.soql-server-es {
  secondary-es.url = ${common-es}
  port = 6010
  curator.ensemble = ${common-zk}
  # Note: do not change "instance"!  Currently q-c is hardcoded
  # to look for es instance primus.
  instance = primus
}

########################
# PG secondary backend #
########################

com.socrata.soql-server-pg {
  database: ${common-database} {
    database: "secondary"
    app-name: "pg secondary store"
  }
  test-database: ${common-database} {
    database: "secondary_test"
    app-name: "pg secondary store test"
  }
  log4j = ${common-log4j} {
    logger.com.socrata = TRACE
  }
}

############
# Lachesis #
############

com.socrata.lachesis {
  curator.ensemble = ${common-zk}
  service {
    advertisement.instance = "local"
    network.port = 7777
    log4j = ${common-log4j} {
      logger.com.socrata.http.client = TRACE
    }
  }
  database = ${common-database} {
    database = "lachesis"
    app-name = "lachesis"
  }
}
######################################
